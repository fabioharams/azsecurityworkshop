{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_xmlCfg": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountName": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountKey": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountEndPoint": {
            "type": "SecureString"
        },
        "publicIPAddresses_PUBIPDVWA_domainNameLabel": {
            "type": "SecureString"
        },
        "virtualMachines_DVWA_name": {
            "defaultValue": "DVWA",
            "type": "String"
        },
        "virtualMachines_VM01_name": {
            "defaultValue": "VM01",
            "type": "String"
        },
        "virtualNetworks_VNETCORP_name": {
            "defaultValue": "VNETCORP",
            "type": "String"
        },
        "applicationGateways_APPGW_name": {
            "defaultValue": "APPGW",
            "type": "String"
        },
        "networkInterfaces_dvwa779_name": {
            "defaultValue": "dvwa779",
            "type": "String"
        },
        "networkInterfaces_vm01488_name": {
            "defaultValue": "vm01488",
            "type": "String"
        },
        "bastionHosts_BASTIONLABSEC_name": {
            "defaultValue": "BASTIONLABSEC",
            "type": "String"
        },
        "publicIPAddresses_PUBIPDVWA_name": {
            "defaultValue": "PUBIPDVWA",
            "type": "String"
        },
        "storageAccounts_labsecuritydiag_name": {
            "defaultValue": "labsecuritydiag",
            "type": "String"
        },
        "publicIPAddresses_VNETBASTION_ip_name": {
            "defaultValue": "VNETBASTION-ip",
            "type": "String"
        },
        "storageAccounts_storagelabsecurity_name": {
            "defaultValue": "storagelabsecurity",
            "type": "String"
        },
        "networkSecurityGroups_APPGLABSECURITY_name": {
            "defaultValue": "APPGLABSECURITY",
            "type": "String"
        },
        "workspaces_workspacesecurity01_name": {
            "defaultValue": "workspacesecurity01",
            "type": "String"
        },
        "solutions_Security_WORKSPACESECURITY01__name": {
            "defaultValue": "Security(WORKSPACESECURITY01)",
            "type": "String"
        },
        "solutions_SecurityInsights_WORKSPACESECURITY01__name": {
            "defaultValue": "SecurityInsights(WORKSPACESECURITY01)",
            "type": "String"
        },
        "solutions_SecurityCenterFree_WORKSPACESECURITY01__name": {
            "defaultValue": "SecurityCenterFree(WORKSPACESECURITY01)",
            "type": "String"
        },
        "solutions_SQLDataClassification_WORKSPACESECURITY01__name": {
            "defaultValue": "SQLDataClassification(WORKSPACESECURITY01)",
            "type": "String"
        },
        "solutions_SQLVulnerabilityAssessment_WORKSPACESECURITY01__name": {
            "defaultValue": "SQLVulnerabilityAssessment(WORKSPACESECURITY01)",
            "type": "String"
        },
        "solutions_SQLAdvancedThreatProtection_WORKSPACESECURITY01__name": {
            "defaultValue": "SQLAdvancedThreatProtection(WORKSPACESECURITY01)",
            "type": "String"
        },
        "networkSecurityGroups_SECURITY_nsg_externalid": {
            "defaultValue": "/subscriptions/6a537a07-6a03-4d2e-a2b1-d9de007d0e24/resourceGroups/IAAS/providers/Microsoft.Network/networkSecurityGroups/SECURITY-nsg",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-04-01",
            "name": "[parameters('networkSecurityGroups_APPGLABSECURITY_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "AppGwProbe",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65503-65534",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "10.0.4.0/24",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AccessFromHome",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "179.209.79.210",
                            "destinationAddressPrefix": "10.0.4.0/24",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AzureLoadBalancerProbe",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "10.0.4.0/24",
                            "access": "Allow",
                            "priority": 220,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "YouShallNotPass",
                        "properties": {
                            "description": "Gandalf rules",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "10.0.4.0/24",
                            "access": "Deny",
                            "priority": 230,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-04-01",
            "name": "[parameters('publicIPAddresses_PUBIPDVWA_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "40.88.151.29",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "fqdn": "09c5ee22-4af4-4911-a32e-74fc3b81ab46.cloudapp.net",
                    "domainNameLabel": "[parameters('publicIPAddresses_PUBIPDVWA_domainNameLabel')]"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-04-01",
            "name": "[parameters('publicIPAddresses_VNETBASTION_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "ipAddress": "52.190.38.247",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-04-01",
            "name": "[parameters('virtualNetworks_VNETCORP_name')]",
            "location": "eastus",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AppGw",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2020-03-01-preview",
            "name": "[parameters('workspaces_workspacesecurity01_name')]",
            "location": "eastus",
            "properties": {
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_labsecuritydiag_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_storagelabsecurity_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "largeFileSharesState": "Disabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('virtualMachines_VM01_name'), '/Microsoft.Insights.VMDiagnosticsSettings')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_VM01_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Diagnostics",
                "type": "IaaSDiagnostics",
                "typeHandlerVersion": "1.5",
                "settings": {
                    "StorageAccount": "labsecuritydiag",
                    "xmlCfg": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_xmlCfg')]"
                },
                "protectedSettings": {
                    "storageAccountName": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountName')]",
                    "storageAccountKey": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountKey')]",
                    "storageAccountEndPoint": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountEndPoint')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[parameters('networkInterfaces_vm01488_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNETCORP_name'), 'default')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNETCORP_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[parameters('networkSecurityGroups_SECURITY_nsg_externalid')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('networkSecurityGroups_APPGLABSECURITY_name'), '/AccessFromHome')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_APPGLABSECURITY_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "179.209.79.210",
                "destinationAddressPrefix": "10.0.4.0/24",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('networkSecurityGroups_APPGLABSECURITY_name'), '/AppGwProbe')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_APPGLABSECURITY_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "65503-65534",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "10.0.4.0/24",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('networkSecurityGroups_APPGLABSECURITY_name'), '/AzureLoadBalancerProbe')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_APPGLABSECURITY_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "10.0.4.0/24",
                "access": "Allow",
                "priority": 220,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('networkSecurityGroups_APPGLABSECURITY_name'), '/YouShallNotPass')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_APPGLABSECURITY_name'))]"
            ],
            "properties": {
                "description": "Gandalf rules",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "10.0.4.0/24",
                "access": "Deny",
                "priority": 230,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('virtualNetworks_VNETCORP_name'), '/AppGw')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNETCORP_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('virtualNetworks_VNETCORP_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNETCORP_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('virtualNetworks_VNETCORP_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNETCORP_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_General|AlphabeticallySortedComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Computers with their most recent data",
                "category": "General Exploration",
                "query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_General|dataPointsPerManagementGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Which Management Group is generating the most data points?",
                "category": "General Exploration",
                "query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_General|dataTypeDistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Distribution of data Types",
                "category": "General Exploration",
                "query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_General|StaleComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Stale Computers (data older than 24 hours)",
                "category": "General Exploration",
                "query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|AllEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Events",
                "category": "Log Management",
                "query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|AllSyslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Syslogs",
                "category": "Log Management",
                "query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|AllSyslogByFacility')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records grouped by Facility",
                "category": "Log Management",
                "query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|AllSyslogByProcessName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records grouped by ProcessName",
                "category": "Log Management",
                "query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|AllSyslogsWithErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records with Errors",
                "category": "Log Management",
                "query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Average HTTP Request time by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Average HTTP Request time by HTTP Method",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by HTTP Request Method",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by HTTP User Agent",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by Host requested by client",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "category": "Log Management",
                "query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|CountOfWarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "category": "Log Management",
                "query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Shows breakdown of response codes",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|EventsByEventLog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event Log",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|EventsByEventsID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event ID",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|EventsByEventSource')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event Source",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|EventsWithStartedinEventID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events containing the word \"started\" grouped by EventID",
                "category": "Log Management",
                "query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Find the maximum time taken for each page",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "category": "Log Management",
                "query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|ListAllIISLogEntries')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All IIS Log Entries",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "How many connections to Operations Manager's SDK service by day",
                "category": "Log Management",
                "query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|ServerRestartTime')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "When did my servers initiate restart?",
                "category": "Log Management",
                "query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|Show404PagesList')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Shows which pages people are getting a 404 for",
                "category": "Log Management",
                "query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Shows servers that are throwing internal server error",
                "category": "Log Management",
                "query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes received by each Azure Role Instance",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes received by each IIS Computer",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes responded back to clients by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes sent by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|WarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Events with level \"Warning\"",
                "category": "Log Management",
                "query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Windows Firewall Policy settings have changed",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/LogManagement(', parameters('workspaces_workspacesecurity01_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_AccountsWhoTerminatedMicrosoftAntimalware')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Accounts who terminated Microsoft antimalware (\"MsMpEng.exe\") on any computer",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4689 and \"MsMpEng.exe\" | summarize TerminationCount = count() by Account",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_AllSecurityActivities')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Security Activities",
                "category": "Security",
                "query": "search in (SecurityEvent) * | project TimeGenerated, Account, Activity, Computer | sort by TimeGenerated desc",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_DevicesWhereHashWasExecuted')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers where \"hash.exe\" was executed (replace with different process name) more than 5 times",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4688 and \"hash.exe\" | summarize ExecutionCount = count() by Computer | limit 500000 | where ExecutionCount > 5",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_DevicesWhereTheMicrosoftAntimalwareProcessTerminated')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers where the Microsoft antimalware process (\"MsMpEng.exe\") was terminated",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4689 and \"MsMpEng.exe\" | summarize TerminationCount = count() by Computer | limit 500000",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_DevicesWithSecurityLogCleared')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers whose security log was cleared",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 1102 | summarize LogClearedCount = count() by Computer | limit 500000",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_LogonActivitybyAccount')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Logon Activity by Account",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 | summarize LogonCount = count() by Account",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_LogonActivitybyDevice')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Logon Activity by Computer",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 | summarize LogonCount = count() by Computer | limit 500000",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_LogonActivityByDeviceWithMoreThan10Logons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Logon Activity by Computer Where More than 10 logons have happened",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 | summarize LogonCount = count() by Computer | limit 500000 | where LogonCount > 10",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_LogonActivityforUsersWith5timesActivity')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Logon Activity by Account for accounts who only logged on less than 5 times",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 | summarize LogonCount = count() by Account | where LogonCount < 5",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_ProcessNamesExecuted')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "All Process names that were executed",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4688 | summarize ExecutionCount = count() by NewProcessName",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_RemotedLoggedAccountsOnDevices')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Accounts who remotely logged on the computer \"Computer01.contoso.com\" (replace with your own computer name)",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 and (LogonTypeName == \"3 - Network\" or LogonTypeName == \"10 - RemoteInteractive\") and Computer == \"Computer01.contoso.com\" | summarize RemoteLogonCount = count() by Account",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityActivitiesonTheDeviceDevice01')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Security Activities on the computer \"Computer01.contoso.com\" (replace with your own computer name)",
                "category": "Security",
                "query": "search in (SecurityEvent) Computer == \"COMPUTER01.contoso.com\" | project TimeGenerated, Account, Activity, Computer | sort by TimeGenerated desc",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityActivitiesonTheDeviceDevice01ForAdmin')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Security Activities on the computer \"COMPUTER01.contoso.com\" for account \"Administrator\" (replace with your own computer and account names)",
                "category": "Security",
                "query": "search in (SecurityEvent) Computer == \"COMPUTER01.contoso.com\" and TargetUserName == \"Administrator\" | project TimeGenerated, Account, Activity, Computer | sort by TimeGenerated desc",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityCriticalNotableIssues|ComputersMissingSecurityUpdates')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers missing security updates",
                "category": "Security Critical Notable Issues",
                "query": "Update | where UpdateState == 'Needed' and Optional == false and Classification == 'Security Updates' and Approved != false | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityCriticalNotableIssues|ComputersWithDetectedThreats')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with detected threats",
                "category": "Security Critical Notable Issues",
                "query": "ProtectionStatus | summarize (TimeGenerated, ThreatStatusRank) = argmax(TimeGenerated, ThreatStatusRank) by Computer | where ThreatStatusRank > 199 and ThreatStatusRank != 470",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityCriticalNotableIssues|ComputersWithGuestAccountLogons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computer with guest account logons",
                "category": "Security Critical Notable Issues",
                "query": "SecurityEvent | where EventID == 4624 and TargetUserName == 'Guest' and LogonType in (10, 3) | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityCriticalNotableIssues|DistinctMaliciousIPAddressesAccessed')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Distinct malicious IP addresses accessed",
                "category": "Security Critical Notable Issues",
                "query": "union isfuzzy=true (WireData | where Direction == 'Outbound'), (WindowsFirewall | where CommunicationDirection == 'SEND'), (CommonSecurityLog | where CommunicationDirection == 'Outbound') | where isnotempty(MaliciousIP) | summarize by MaliciousIP",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityCriticalNotableIssues|HighPriorityADAssessmentSecurityRecommendations')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "High priority Active Directory assessment security recommendations",
                "category": "Security Critical Notable Issues",
                "query": "let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[]; union isfuzzy=true schemaColumns, (ADAssessmentRecommendation | where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore>=35) | summarize arg_max(TimeGenerated, *) by RecommendationId",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityCriticalNotableIssues|HighPrioritySQLAssessmentSecurityRecommendations')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "High priority SQL assessment security recommendations",
                "category": "Security Critical Notable Issues",
                "query": "let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[]; union isfuzzy=true schemaColumns, (SQLAssessmentRecommendation | where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore>=35) | summarize arg_max(TimeGenerated, *) by RecommendationId",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|AccountsFailedToLogon')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Accounts failed to log on",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID == 4625 | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|Auditd_AccountsFailedToLogin')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Accounts failed to login (Linux)",
                "category": "Security Info Notable Issues",
                "query": "LinuxAuditLog | where RecordType == 'user_login' and res != 'success' | summarize count() by acct",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|Auditd_ExecutedCommands')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Executed Commands (Linux)",
                "category": "Security Info Notable Issues",
                "query": "LinuxAuditLog | where RecordType == 'syscall' and syscall == 'execve' | summarize count() by cmd",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|Auditd_LoadingOrUnloadingOfKernelModules')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Loading or Unloading of Kernel modules (Linux)",
                "category": "Security Info Notable Issues",
                "query": "LinuxAuditLog | where key == 'kernelmodules' and RecordType != 'CONFIG_CHANGE'",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|Auditd_NumberOfDistinctLocationsOfProcessExecuted')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Distinct paths of Executed Commands (Linux)",
                "category": "Security Info Notable Issues",
                "query": "LinuxAuditLog | where RecordType == 'syscall' and syscall == 'execve' | summarize count() by exe",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|ChangeOrResetPasswordsAttempts')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Change or reset passwords attempts",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID in (4723, 4724) | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|ComputersWithCleanedEventLogs')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with cleaned event logs",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID in (1102, 517) and EventSourceName == 'Microsoft-Windows-Eventlog' | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|ComputersWithFailedLinuxUserPasswordChange')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with failed Linux user password change",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where Facility == 'authpriv' and ((SyslogMessage has 'passwd:chauthtok' and SyslogMessage has 'authentication failure') or SyslogMessage has 'password change failed') | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|ComputersWithFailedSshLogons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with failed ssh logons",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where (Facility == 'authpriv' and SyslogMessage has 'sshd:auth' and SyslogMessage has 'authentication failure') or (Facility == 'auth' and ((SyslogMessage has 'Failed' and SyslogMessage has 'invalid user' and SyslogMessage has 'ssh2') or SyslogMessage has 'error: PAM: Authentication failure')) | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|ComputersWithFailedSudoLogons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with failed sudo logons",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where (Facility == 'authpriv' and SyslogMessage has 'sudo:auth' and (SyslogMessage has 'authentication failure' or SyslogMessage has 'conversation failed')) or ((Facility == 'auth' or Facility == 'authpriv') and SyslogMessage has 'user NOT in sudoers') | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|ComputersWithFailedSuLogons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with failed su logons",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where (Facility == 'authpriv' and SyslogMessage has 'su:auth' and SyslogMessage has 'authentication failure') or (Facility == 'auth' and SyslogMessage has 'FAILED SU') | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|ComputersWithNewLinuxGroupCreated')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with new Linux group created",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where Facility == 'authpriv' and SyslogMessage has 'new group' | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|ComputersWithUsersAddedToLinuxGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with users added to a Linux group",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where Facility == 'authpriv' and SyslogMessage has 'to group' and (SyslogMessage has 'add' or SyslogMessage has 'added') | summarize by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|DistinctClientsResolvingMaliciousDomains')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Distinct clients resolving malicious domains",
                "category": "Security Info Notable Issues",
                "query": "let schemaColumns = datatable(ClientIP:string)[]; union isfuzzy=true schemaColumns, (DnsEvents | where SubType == 'LookupQuery' and isnotempty(MaliciousIP)) | summarize count() by ClientIP",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|LockedAccounts')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Locked accounts",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID == 4740 | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|RemoteProcedureCallAttempts')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Remote procedure call(RPC) attempts",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID == 5712 | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|SecurityGroupsCreatedOrModified')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Security groups created or modified",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID in (4727, 4731, 4735, 4737, 4754, 4755) | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityInfoNotableIssues|UserAccountsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "User accounts created or enabled",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID in (4720, 4722) | summarize by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|ComputersMissingCriticalUpdates')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers missing critical updates",
                "category": "Security Warning Notable Issues",
                "query": "Update | where UpdateState == 'Needed' and Optional == false and Classification == 'Critical Updates' and Approved != false | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|ComputersWithInsufficientProtection')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with insufficient  protection",
                "category": "Security Warning Notable Issues",
                "query": "ProtectionStatus | summarize (TimeGenerated, ProtectionStatusRank) = argmax(TimeGenerated, ProtectionStatusRank) by Computer | where ProtectionStatusRank > 199 and ProtectionStatusRank != 550",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|ComputersWithSystemAuditPolicyChanges')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Computers with system audit policy changes",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID == 4719 | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|DomainSecurityPolicyChanges')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Domain security policy changes",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID == 4739 | summarize count() by DomainPolicyChanged",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|LogonsWithClearTextPassword')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Logons with a clear text password",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID == 4624 and LogonType == 8 | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|LowPriorityADAssessmentSecurityRecommendations')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Low priority AD assessment security recommendations",
                "category": "Security Warning Notable Issues",
                "query": "let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[]; union isfuzzy=true schemaColumns, (ADAssessmentRecommendation | where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore<35) | summarize arg_max(TimeGenerated, *) by RecommendationId",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|LowPrioritySQLAssessmentSecurityRecommendations')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Low priority SQL assessment security recommendations",
                "category": "Security Warning Notable Issues",
                "query": "let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[]; union isfuzzy=true schemaColumns, (SQLAssessmentRecommendation | where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore<35) | summarize arg_max(TimeGenerated, *) by RecommendationId",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|MembersAddedToSecurityEnabledGroups')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Members added To security-enabled groups",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID in (4728, 4732, 4756) | summarize count() by SubjectAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_workspacesecurity01_name'), '/Security(', parameters('workspaces_workspacesecurity01_name'), ')_SecurityWarningNotableIssues|SuspiciousExecutables')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "properties": {
                "displayName": "Suspicious executables",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID == 8002 and Fqbn == '-' | summarize ExecutionCountHash=count() by FileHash | where ExecutionCountHash <= 5",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_Security_WORKSPACESECURITY01__name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "plan": {
                "name": "Security(WORKSPACESECURITY01)",
                "promotionCode": "",
                "product": "OMSGallery/Security",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name')), '/views/Security(workspacesecurity01)')]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_SecurityCenterFree_WORKSPACESECURITY01__name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "plan": {
                "name": "SecurityCenterFree(WORKSPACESECURITY01)",
                "promotionCode": "",
                "product": "OMSGallery/SecurityCenterFree",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]",
                "containedResources": []
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_SecurityInsights_WORKSPACESECURITY01__name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "plan": {
                "name": "SecurityInsights(WORKSPACESECURITY01)",
                "promotionCode": "",
                "product": "OMSGallery/SecurityInsights",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]",
                "containedResources": []
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_SQLAdvancedThreatProtection_WORKSPACESECURITY01__name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "plan": {
                "name": "SQLAdvancedThreatProtection(WORKSPACESECURITY01)",
                "promotionCode": "",
                "product": "OMSGallery/SQLAdvancedThreatProtection",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]",
                "containedResources": []
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_SQLDataClassification_WORKSPACESECURITY01__name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "plan": {
                "name": "SQLDataClassification(WORKSPACESECURITY01)",
                "promotionCode": "",
                "product": "OMSGallery/SQLDataClassification",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]",
                "containedResources": []
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_SQLVulnerabilityAssessment_WORKSPACESECURITY01__name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]"
            ],
            "plan": {
                "name": "SQLVulnerabilityAssessment(WORKSPACESECURITY01)",
                "promotionCode": "",
                "product": "OMSGallery/SQLVulnerabilityAssessment",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_workspacesecurity01_name')), '/views/SQLVulnerabilityAssessment(workspacesecurity01)')]"
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_labsecuritydiag_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_labsecuritydiag_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storagelabsecurity_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagelabsecurity_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_labsecuritydiag_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_labsecuritydiag_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storagelabsecurity_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagelabsecurity_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_DVWA_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_dvwa779_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_labsecuritydiag_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_DVWA_name'), '_disk1_20f16b7a301d46de9cc9560dd1d95890')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_DVWA_name'), '_disk1_20f16b7a301d46de9cc9560dd1d95890'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_DVWA_name')]",
                    "adminUsername": "Azuser1",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_dvwa779_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_labsecuritydiag_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_VM01_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm01488_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_labsecuritydiag_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_VM01_name'), '_OsDisk_1_5417813367a04012b10c3f8bde9fb249')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_VM01_name'), '_OsDisk_1_5417813367a04012b10c3f8bde9fb249'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_VM01_name')]",
                    "adminUsername": "Azuser1",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm01488_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_labsecuritydiag_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2020-04-01",
            "name": "[parameters('applicationGateways_APPGW_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNETCORP_name'), 'AppGw')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_PUBIPDVWA_name'))]"
            ],
            "properties": {
                "sku": {
                    "name": "WAF_Medium",
                    "tier": "WAF",
                    "capacity": 1
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNETCORP_name'), 'AppGw')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "authenticationCertificates": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_PUBIPDVWA_name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BACKENDDVWA",
                        "properties": {
                            "backendAddresses": []
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "HTTPSETTINGSDVWA",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": false,
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "LISTENERDVWA",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_APPGW_name')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_APPGW_name')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "RULEDVWA",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_APPGW_name')), '/httpListeners/LISTENERDVWA')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_APPGW_name')), '/backendAddressPools/BACKENDDVWA')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_APPGW_name')), '/backendHttpSettingsCollection/HTTPSETTINGSDVWA')]"
                            }
                        }
                    }
                ],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0",
                    "disabledRuleGroups": [],
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100
                },
                "enableHttp2": false
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-04-01",
            "name": "[parameters('bastionHosts_BASTIONLABSEC_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VNETBASTION_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNETCORP_name'), 'AzureBastionSubnet')]"
            ],
            "properties": {
                "dnsName": "bst-33f6121f-9801-4351-9e60-b436a44bb4ed.bastion.azure.com",
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VNETBASTION_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNETCORP_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[parameters('networkInterfaces_dvwa779_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNETCORP_name'), 'default')]",
                "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_APPGW_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNETCORP_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "applicationGatewayBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_APPGW_name')), '/backendAddressPools/BACKENDDVWA')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[parameters('networkSecurityGroups_SECURITY_nsg_externalid')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_labsecuritydiag_name'), '/default/bootdiagnostics-dvwa-f5f1e59c-750b-45d0-baca-5c29c48c3c4c')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_labsecuritydiag_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_labsecuritydiag_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_labsecuritydiag_name'), '/default/bootdiagnostics-vm01-b9d1acf4-1910-4a66-afdc-82678cfbe5ea')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_labsecuritydiag_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_labsecuritydiag_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]
}